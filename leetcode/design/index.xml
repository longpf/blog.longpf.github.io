<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on long·pf</title>
    <link>http://blog.longpengfei.com/leetcode/design/</link>
    <description>Recent content in Design on long·pf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2018. All rights reserved.</copyright>
    <lastBuildDate>Mon, 30 Jul 2018 10:25:51 +0800</lastBuildDate>
    
	<atom:link href="http://blog.longpengfei.com/leetcode/design/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>146. LRU Cache 最近最少使用置换缓存器</title>
      <link>http://blog.longpengfei.com/post/146-lru-cache-%E6%9C%80%E8%BF%91%E6%9C%80%E5%B0%91%E4%BD%BF%E7%94%A8%E7%BD%AE%E6%8D%A2%E7%BC%93%E5%AD%98%E5%99%A8/</link>
      <pubDate>Mon, 30 Jul 2018 10:25:51 +0800</pubDate>
      
      <guid>http://blog.longpengfei.com/post/146-lru-cache-%E6%9C%80%E8%BF%91%E6%9C%80%E5%B0%91%E4%BD%BF%E7%94%A8%E7%BD%AE%E6%8D%A2%E7%BC%93%E5%AD%98%E5%99%A8/</guid>
      <description>Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and put.
get(key) - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1. put(key, value) - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.</description>
    </item>
    
  </channel>
</rss>