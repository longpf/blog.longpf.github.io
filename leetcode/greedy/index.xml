<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Greedy on long·pf</title>
    <link>http://blog.longpengfei.com/leetcode/greedy/</link>
    <description>Recent content in Greedy on long·pf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2018. All rights reserved.</copyright>
    <lastBuildDate>Wed, 05 Jun 2019 16:55:50 +0800</lastBuildDate>
    
	<atom:link href="http://blog.longpengfei.com/leetcode/greedy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>45. Jump Game 2 跳跃游戏2</title>
      <link>http://blog.longpengfei.com/post/45-jump-game2/</link>
      <pubDate>Wed, 05 Jun 2019 16:55:50 +0800</pubDate>
      
      <guid>http://blog.longpengfei.com/post/45-jump-game2/</guid>
      <description>Given an array of non-negative integers, you are initially positioned at the first index of the array.
Each element in the array represents your maximum jump length at that position.
Your goal is to reach the last index in the minimum number of jumps.
Example:
Input: [2,3,1,1,4] Output: 2 Explanation: The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.</description>
    </item>
    
    <item>
      <title>44. Wildcard Matching 通配符匹配</title>
      <link>http://blog.longpengfei.com/post/44-wildcard-matching-%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Tue, 18 Sep 2018 18:12:18 +0800</pubDate>
      
      <guid>http://blog.longpengfei.com/post/44-wildcard-matching-%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D/</guid>
      <description>Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for &#39;?&#39; and &#39;*&#39;. &#39;?&#39; Matches any single character. &#39;*&#39; Matches any sequence of characters (including the empty sequence).  The matching should cover the entire input string (not partial).
Note:
 s could be empty and contains only lowercase letters a-z. p could be empty and contains only lowercase letters a-z, and characters like ?</description>
    </item>
    
  </channel>
</rss>